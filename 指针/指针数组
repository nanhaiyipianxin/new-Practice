#include<stdio.h>
#include"标头.h"
int main(void)
{																							//普通变量是高序字节-->低序字节
	int arr[] = {13,5,5,0};		 //0x0000003374D3F658   是13,0x0000003374D3F65C是5           是低序字节 --->高序字节
	printf("%p\n", arr);
	printf("%p\n",&arr);         //数组名是一个常量，指向数组首地址

	int* p = arr;                //为啥不带&因为arr本身就是一个地址
	printf("%d\n", *p); printf("%p\n",p);//输出13    //输出地址
	p[3] = 666;                              //更改数组

	for (size_t i = 0; i < 4; i++) //循环指针打印数组
	{
		//printf("%d\n",p[i]);      //为啥不写*p是因为,*p代表arr也就是首地址的数据，和普通指针不一样普通指针*p代表了数据，但数组指针就是只是代表了首地址数据
		//printf("%d\n",*(p+2));     // 这里的*(p+2),等于是首地址偏移2，本来p应该是首地址
		//指针类型变量+1等同于 首地址+seizeof(int/char/float)
		printf("%d\n", *p++);       //这里是p++因为是先运算*p然后++,要不然直接++了然后*p
		//可能加多了没有控制好*p直接变野指针了，注意哈
	}
	printf("%p\n",p);
	int step = p - arr;           //int类型步长，指针相减
	printf("%d\n",step);          //结果为4
	return 0;

}
